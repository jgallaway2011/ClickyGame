{"version":3,"sources":["components/Wrapper.js","components/Navbar.js","components/Jumbotron.js","components/ImageCard.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","className","children","Navbar","href","message","currentScore","highScore","Jumbotron","styles","card","width","height","FriendCard","key","id","style","src","image","alt","name","onClick","handleClick","App","state","images","clicked","_this","indexOf","handleIncrement","setState","concat","console","log","handleReset","handleShuffle","shuffledImages","array","i","length","j","Math","floor","random","temp","shuffleImages","updatedScore","_this2","this","components_Wrapper","components_Navbar","components_Jumbotron","map","ImageCard","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.88dfd419.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Wrapper = props => <div className=\"container no-gutters\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\n\nconst Navbar = props => (\n  <nav className=\" row navbar navbar-expand-lg navbar-light bg-light\">\n    <a className=\"col-4 navbar-brand text-center\" href=\"/\">\n      Clicky Game\n    </a>\n    <div className=\"col-4 navbar-brand text-center\">\n      <span>{props.message}</span>\n    </div>\n    <div className=\"col-4 navbar-brand text-center\">\n      <span>Score: {props.currentScore}  |  High Score: {props.highScore}</span>\n    </div>\n  </nav>\n);\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Jumbotron = () => (\n  <div className=\"jumbotron text-center\">\n    <h1>Clicky Game!</h1>\n    <p>\n      Click on an image to earn points, but don't click on any more than once!\n    </p>\n  </div>\n);\n\nexport default Jumbotron;\n","import React from \"react\";\n\nconst styles = {\n  card: {\n    width: \"200px\",\n    height: \"200px\"\n  },\n};\n\nconst FriendCard = props => (\n  <div className=\"col-sm-6 col-md-4 col-lg-3\" key={props.id}>\n    <div className=\"card ml-auto mr-auto\" style={styles.card}>\n      <img className=\"card-img-top\" src={props.image} alt={props.name} onClick={() => props.handleClick(props.name)}/>\n    </div>\n  </div>\n);\n\nexport default FriendCard;\n","import React, { Component } from \"react\";\nimport images from \"./images.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport ImageCard from \"./components/ImageCard\"\nimport \"./App.css\";\n\nfunction shuffleImages(array) {\n  let i = array.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\nclass App extends Component {\n  state = {\n    images,\n    currentScore: 0,\n    highScore: 0,\n    message: \"Click any image to start the game!\",\n    clicked: [],\n  };\n\n  // Function to handle what to do when user clicks a image\n  handleClick = name => {\n    if (this.state.clicked.indexOf(name) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(name) });\n      console.log(this.state.clicked);\n    } else {\n      this.setState({ message: \"That's incorrect! You lost!\" });\n      this.handleReset();\n    }\n  };\n\n  // Function to trigger shuffle function outsideo of class\n  handleShuffle = () => {\n    let shuffledImages = shuffleImages(images);\n    this.setState({ images: shuffledImages });\n  };\n\n  // Function in increment score when correct selection made\n  handleIncrement = () => {\n    const updatedScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: updatedScore,\n      message: \"That's correct!\"\n    });\n    if (updatedScore >= this.state.highScore) {\n      this.setState({ highScore: updatedScore });\n    }\n    if (updatedScore === 12) {\n      this.setState({ message: \"You won!\" });\n      this.handleReset();\n    }\n    if (updatedScore <= 11)\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  // Render html to page\n  render() {\n    return (\n      <Wrapper>\n        <Navbar\n          currentScore={this.state.currentScore}\n          highScore={this.state.highScore}\n          message={this.state.message}\n        />\n        <Jumbotron />\n        <div className=\"row align-items-center\">\n          {this.state.images.map(image => (\n            <ImageCard\n              key={image.id}\n              handleClick={this.handleClick}\n              handleShuffle={this.handleShuffle}\n              handleIncrement={this.handleIncrement}\n              name={image.name}\n              id={image.id}\n              image={image.image}\n            />\n          ))}\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}